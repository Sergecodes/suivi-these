// Nice post: https://www.section.io/engineering-education/session-management-in-nodejs-using-expressjs-and-express-session/

- added 'message' to EnvoiMessage
- added model Departement
- add operation "changerSujet()" on Dossier
- add field dateSoutenance on Etudiant
- add method envoyerDossier with updated params in Etudiant
- rename field 'rapportUrl' in Avis to rapport
- (class diagram) extract connecter and deconnecter methods then import them using stereotypes & what not
- remove rejet dossier association. instead add method rejeterDossier to admin, whose implementation will consist of updating the status of the dossier
- update noter_dossier association class
- remove model Statut_Dossier and directly place status in Dossier model
- remove soumettreNoteVersAdmin() method from Admin
- add departement to Etudiant model...


* matricule and etudiant should not be unique, this will permit a student to register
maybe eventually i.e to have a master2 and doctorat account in the system

TODO FOR INTEGRATION:
    - 
    - store `notes` in NoteDossier as json string ??? then when getting configure mongoose to 
    automatically reconvert to object ... 
    (are we guaranteed of the order in which object properties are stored?)

TODO: 
    * Document controllers au fur et a mesure (eg. specify required and optional values)
    - continue admin api
    - prevent server from crashing when error
    - use callbacks ... where necessary, also improve queries

* setup access-control for bucket
https://stackoverflow.com/questions/37760695/firebase-storage-and-access-control-allow-origin?rq=1

------------------------------------------------------------------------------------


